//Sequences in Strings
/*  \n: new line
    \t: Tab, means 8 spaces
    \\: Back slash
    \': Single quote (')
    \": Double quote (")
*/

console.log(
	"I hope everyone is enjoying the 30 Days Of JavaScript challenge.\nDo you ?"
); // line break
console.log("Days\tTopics\tExercises");
console.log("Day 1\t3\t5");
console.log("Day 2\t3\t5");
console.log("Day 3\t3\t5");
console.log("Day 4\t3\t5");
console.log("This is a backslash  symbol (\\)"); // To write a backslash
console.log('In every programming language it starts with "Hello, World!"');
console.log("In every programming language it starts with 'Hello, World!'");
console.log("The saying 'Seeing is Believing' isn't correct in 2020");

//String Methods

let string = "JavaScript";

string.toUpperCase(); //this method changes the string to uppercase letters.

string.toLowerCase(); //this method changes the string to lowercase letters.

string.substr(); //It takes two arguments, the starting index and number of characters to slice.
console.log(string.substr(4, 6)); // Script

string.substring(); //It takes two arguments, the starting index and the stopping index but it doesn't include the character at the stopping index.
console.log(string.substring(0, 4)); // Java
console.log(string.substring(4, 10)); // Script
console.log(string.substring(4)); // Script

string.split(); //The split method splits a string at a specified place.

string.trim(); //Removes trailing space in the beginning or the end of a string.

string.includes(); //It takes a substring argument and it checks if substring argument exists in the string. includes() returns a boolean.
console.log(string.includes("Script")); // true
console.log(string.includes("script")); // false - it is case sensitive!

string.replace(/*oldsubstring, newsubstring*/); //takes as a parameter the old substring and a new substring.
console.log(string.replace("JavaScript", "Python")); // Returns `Python`

string.charAt(); //Takes index and it returns the value at that index
console.log(string.charAt(0)); // returns J
let lastIndex = string.length - 1;
console.log(string.charAt(lastIndex)); // returns t

string.charCodeAt(); // Takes index and it returns char code (ASCII number) of the value at that index

string.indexOf(); //Takes a substring and if the substring exists in a string it returns the first position of the substring if does not exist it returns -1

string.lastIndexOf(); //Takes a substring and if the substring exists in a string it returns the last position of the substring if it does not exist it returns -1

string.concat(); //it takes many substrings and joins them.

string.startsWith(); //it takes a substring as an argument and it checks if the string starts with that specified substring. It returns a boolean

string.endsWith(); //it takes a substring as an argument and it checks if the string ends with that specified substring. It returns a boolean

string.search(); //it takes a substring as an argument and it returns the index of the first match. The search value can be a string or a regular expression pattern.
let string1 =
	"I love JavaScript. If you do not love JavaScript what else can you love.";
console.log(string1.search("love")); // 2
console.log(string1.search(/javascript/gi)); // 7

string.match(); //it takes a substring or regular expression pattern as an argument and it returns an array if there is match if not it returns null.

let string2 =
	"I love JavaScript. If you do not love JavaScript what else can you love.";
let patternOne = /love/; // with out any flag
let patternTwo = /love/gi; // g-means to search in the whole text, i - case insensitive
console.log(string2.match(patternOne)); // [ 'love', index: 0, input: 'love', groups: undefined ]
console.log(string2.match(patternTwo)); // [ 'love', 'love', 'love' ]

//Let us extract numbers from text using a regular expression.
let txt =
	"In 2019, I ran 30 Days of Python. Now, in 2020 I am super exited to start this challenge";
let regEx = /\d+/;
// d with escape character means d not a normal d instead acts a digit
// + means one or more digit numbers,
// if there is g after that it means global, search everywhere.
console.log(txt.match(regEx))  // ["2", "0", "1", "9", "3", "0", "2", "0", "2", "0"]
console.log(txt.match(/\d+/g)) // ["2019", "30", "2020"]

string.repeat(); //it takes a number as argument and it returns the repeated version of the string.
let string3 = 'love'
console.log(string3.repeat(10)) // lovelovelovelovelovelovelovelovelovelove
